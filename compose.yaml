services:

  # MQTT broker
  mosquitto:
    image: eclipse-mosquitto:2
    container_name: mosquitto
    restart: always
    ports:
      - "1883:1883"
      - "9001:9001"
    volumes:
      - ./mosquitto/config:/mosquitto/config
      - ./mosquitto/data:/mosquitto/data
      - ./mosquitto/log:/mosquitto/log

  # Apache Kafka broker
  kafka-broker:
    image: apache/kafka:latest
    container_name: kafka-broker
    restart: always
    ports:
      - "9094:9094" # External docker network listener port (e.g. used for development)
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      # Need to use container name "kafka-broker" as the hostname for the kafka-broker-init to work properly,
      # using docker-compose internal network dns
      # EXTERNAL listener required for connections outside the Docker network (e.g. for development purposes)
      KAFKA_LISTENERS: PLAINTEXT://kafka-broker:9092,CONTROLLER://kafka-broker:9093,EXTERNAL://0.0.0.0:9094
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-broker:9092,EXTERNAL://host.docker.internal:9094
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka-broker:9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_NUM_PARTITIONS: 3

  # Service to initialize Kafka topics
  kafka-broker-init:
    image: apache/kafka:latest
    container_name: kafka-broker-init
    restart: no
    depends_on:
      - kafka-broker
    volumes:
      - ./kafka/init-kafka.sh:/init-kafka.sh
    entrypoint: [ "/bin/sh", "-c" ]
    command: "/init-kafka.sh"

  # MongoDB
  mongodb:
    image: mongodb/mongodb-community-server:8.0-ubi8
    container_name: mongodb
    restart: always
    ports:
      - "27017:27017"
    environment:
      MONGODB_INITDB_ROOT_USERNAME_FILE: /run/secrets/mongodb_root_username
      MONGODB_INITDB_ROOT_PASSWORD_FILE: /run/secrets/mongodb_root_password
    volumes:
      - mongo-data:/data/db
      # Mount the initialization scripts which creates catchcare database and user
      - ./mongodb/docker:/docker-entrypoint-initdb.d:ro
    secrets:
      - mongodb_root_username
      - mongodb_root_password
      - mongodb_user_username
      - mongodb_user_password

  # trap-iot-service
  trap-iot-service:
    build:
      context: .
      dockerfile: services/trap-iot-service/Dockerfile
    container_name: trap-iot-service
    environment:
        # Mosquitto hostname on Docker network
        MQTT_BROKER_HOST: mosquitto
        MQTT_BROKER_PORT: 1883
        # Kafka hostname on network Docker
        KAFKA_BROKER_HOST: kafka-broker
        KAFKA_BROKER_PORT: 9092
        # Spring profile
        SPRING_PROFILES_ACTIVE: docker
    depends_on:
      - kafka-broker
      - mosquitto

  # trap-service
  trap-service:
    build:
      context: .
      dockerfile: services/trap-service/Dockerfile
    container_name: trap-service
    ports:
      - "8081:8081"
    environment:
      # Kafka hostname on network Docker
      KAFKA_BROKER_HOST: kafka-broker
      KAFKA_BROKER_PORT: 9092
      # MongoDB hostname on Docker network
      MONGODB_HOST: mongodb
      MONGODB_PORT: 27017
      # Spring profile
      SPRING_PROFILES_ACTIVE: docker
    secrets:
      - mongodb_user_username
      - mongodb_user_password
    depends_on:
      - kafka-broker
      - mongodb

volumes:
  mongo-data:

secrets:
  mongodb_root_username:
    file: secrets/mongodb_root_username
  mongodb_root_password:
    file: secrets/mongodb_root_password
  mongodb_user_username:
    file: secrets/mongodb_user_username
  mongodb_user_password:
    file: secrets/mongodb_user_password